plugins {
    id 'java'
    id ("io.github.goooler.shadow") version "8.1.8"
}

subprojects {
    group = 'org.tan'
    version = '0.13.3'

    apply plugin: 'java'

    compileJava.options.encoding = 'UTF-8'
    tasks.withType(JavaCompile).configureEach {
        options.encoding = 'UTF-8'
    }

    repositories {
        mavenCentral()
        maven { url = "https://repo.extendedclip.com/content/repositories/placeholderapi/" }
        maven { url = "https://oss.sonatype.org/content/groups/public/" }
        maven { url = "https://libraries.minecraft.net/" }
        maven {
            name = 'vault'
            url = "https://jitpack.io"
        }
        maven { url = uri("${rootDir}/../SphereLib/build/repo") }
    }

    dependencies {
        compileOnly 'org.leralix:SphereLib:+'
        compileOnly 'com.mojang:authlib:4.0.43'
        compileOnly 'net.luckperms:api:5.4'
        compileOnly "com.github.MilkBowl:VaultAPI:1.7"
        compileOnly 'me.clip:placeholderapi:2.11.5'
        implementation 'org.bstats:bstats-bukkit:3.1.0'
        implementation 'net.objecthunter:exp4j:0.4.8'
        implementation("dev.triumphteam:triumph-gui:+")
    }
    def targetJavaVersion = 17
    project(":paper") {
        targetJavaVersion = 21
    }

    java {
        def javaVersion = JavaVersion.toVersion(targetJavaVersion)
        sourceCompatibility = javaVersion
        targetCompatibility = javaVersion
        if (JavaVersion.current() < javaVersion) {
            toolchain.languageVersion = JavaLanguageVersion.of(targetJavaVersion)
        }
    }

    tasks.withType(JavaCompile).configureEach {
        if (targetJavaVersion >= 10 || JavaVersion.current().isJava10Compatible()) {
            options.release = targetJavaVersion
        }
    }

    processResources {
        def props = [version: version]
        inputs.properties props
        filteringCharset 'UTF-8'
        filesMatching('plugin.yml') {
            expand props
        }
    }
}

